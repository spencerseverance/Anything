[
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "Model",
    "section": "",
    "text": "Code\nimport duckdb\nfrom pandas import get_dummies\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing\nfrom palmerpenguins import penguins\n\n\n## Get Data\n\n\nCode\ndf = penguins.load_penguins().dropna()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n\n\n\n\n\n\n\n\nCode\n#import duckdb\n#con = duckdb.connect('my-db.duckdb')\n#df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\n#con.close()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n\n\n\n\n\n\n## Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\n\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)\n\n\n## Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\n\nprint(f\"Intercept {model.intercept_}\")\n\nprint(f\"Columns {X.columns}\")\n\nprint(f\"Coefficients {model.coef_}\")\n\n\nR^2 0.8555368759537614\nIntercept 2169.2697209393996\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]\n\n\n## Create vetiver model\n\n\nCode\nfrom vetiver import VetiverModel \nv = VetiverModel(model, model_name='penguin_model', prototype_data=X)\n\n\n\n\nCode\nfrom pins import board_folder \nfrom vetiver import vetiver_pin_write  \n\n#model_board = board_folder('data/model', allow_pickle_read = True)\n#vetiver_pin_write(model_board, v)\n\n\n\n\nCode\nfrom vetiver import VetiverAPI \n#app = VetiverAPI(v, check_prototype = True)\n\n\n\n\nCode\n# import duckdb\n# from palmerpenguins import penguins\n# \n# con = duckdb.connect('my-db.duckdb')\n# df = penguins.load_penguins()\n# con.execute('CREATE TABLE penguins AS SELECT * FROM df')\n# con.close()"
  },
  {
    "objectID": "eda-db.html",
    "href": "eda-db.html",
    "title": "Penguins EDA",
    "section": "",
    "text": "## *Penguin Size and Mass by Sex and Species*\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\n\nlibrary(dbplyr)\n\n\n\nAttaching package: 'dbplyr'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    ident, sql\n\n\nCode\ncon &lt;- DBI::dbConnect(\n\n  duckdb::duckdb(), \n\n  dbdir = \"my-db.duckdb\"\n\n  )\n\ndf &lt;- dplyr::tbl(con, \"penguins\")\n\n\n\n\nCode\ndf %&gt;%\n\n  group_by(species, sex) %&gt;%\n\n  summarise(\n\n    across(\n\n        ends_with(\"mm\") | ends_with(\"g\"),\n\n      \\(x) mean(x, na.rm = TRUE)\n\n      )\n\n    ) %&gt;%\n\n  dplyr::collect() %&gt;%\n\n  knitr::kable()\n\n\n`summarise()` has grouped output by \"species\". You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\n\n\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n\n\n\n\n\n## *Penguin Size vs Mass by Species*\n\n\nCode\ndf %&gt;%\n\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n\n  geom_point() + \n\n  geom_smooth(method = \"lm\")\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\nDBI::dbDisconnect(con)"
  },
  {
    "objectID": "model2.html",
    "href": "model2.html",
    "title": "Model",
    "section": "",
    "text": "Code\nfrom palmerpenguins import penguins\n\nfrom pandas import get_dummies\n\nimport numpy as np\n\nfrom sklearn.linear_model import LinearRegression\n\nfrom sklearn import preprocessing\n\n\n## Get Data\n\n\nCode\ndf = penguins.load_penguins().dropna()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n\n\n\n\n\n\n\n\nCode\n#import duckdb\n#con = duckdb.connect('my-db.duckdb')\n#df = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()\n#con.close()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n\n\n\n\n\n\n## Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\n\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)\n\n\n## Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\n\nprint(f\"Intercept {model.intercept_}\")\n\nprint(f\"Columns {X.columns}\")\n\nprint(f\"Coefficients {model.coef_}\")\n\n\nR^2 0.8555368759537614\nIntercept 2169.2697209393996\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]\n\n\n\n\nCode\nfrom vetiver import VetiverModel\nv = VetiverModel(model, model_name='penguin_model', prototype_data=X)\n\n\n\n\nCode\nfrom pins import board_folder\nfrom vetiver import vetiver_pin_write\n\nmodel_board = board_folder(\"/data/model\", allow_pickle_read = True)\n#vetiver_pin_write(model_board, v)\n\n\n\n\nCode\nfrom vetiver import VetiverAPI\napp = VetiverAPI(v, check_prototype = True)"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Penguins EDA",
    "section": "",
    "text": "## Penguin Size and Mass by Sex and Species\n\n#install.packages(\"palmerpenguins\")\n#install.packages(\"dplyr\")\n#install.packages(\"renv\")\n\nlibrary(palmerpenguins)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dbplyr)\n\n\nAttaching package: 'dbplyr'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    ident, sql\n\nlibrary(ggplot2)\nlibrary(DBI)\nlibrary(duckdb)\n\n#con &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\n#DBI::dbWriteTable(con, \"penguins\", palmerpenguins::penguins)\n#DBI::dbDisconnect(con)\n\n\ndf &lt;- palmerpenguins::penguins\n\n#con &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\n\n\n#df &lt;- dplyr::tbl(con, \"penguins\")\n\n#df &lt;- palmerpenguins::penguins\n\n\ndf %&gt;%\n\n  group_by(species, sex) %&gt;%\n\n  summarise(\n\n    across(\n\n        ends_with(\"mm\") | ends_with(\"g\"),\n\n      \\(x) mean(x, na.rm = TRUE)\n\n      )\n\n    ) %&gt;%\n\n  dplyr::collect() %&gt;%\n\n  knitr::kable()\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\n\n\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n\n\n\n\n\n## Penguin Size vs Mass by Species\n\ndf %&gt;%\n\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n\n  geom_point() + \n\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n#DBI::dbDisconnect(con, shutdown = TRUE)"
  },
  {
    "objectID": "r-data-load.html",
    "href": "r-data-load.html",
    "title": "Final Project - Sev",
    "section": "",
    "text": "con &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = “my-db.duckdb”)\nDBI::dbWriteTable(con, “penguins”, palmerpenguins::penguins)\nDBI::dbDisconnect(con)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Final Project - Sev",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  }
]